# --- Estágio 1: Builder ---
# Prepara a base com todas as dependências para compilar o projeto
FROM node:18-slim AS builder

WORKDIR /app

# Instala o OpenSSL, uma dependência do Prisma
RUN apt-get update && apt-get install -y openssl

# Copia apenas os package.json para aproveitar o cache do Docker
COPY package*.json ./

# Instala todas as dependências (incluindo devDependencies para a compilação)
RUN npm install

# Copia o resto do código-fonte
COPY . .

# Gera o cliente Prisma
RUN npx prisma generate

# Compila o nosso código TypeScript para JavaScript
RUN npm run build


# --- Estágio 2: Produção ---
# Cria a imagem final, mais leve, apenas com o necessário para rodar
FROM node:18-slim

WORKDIR /app

# Instala o OpenSSL na imagem final também
RUN apt-get update && apt-get install -y openssl

# Copia os package.json
COPY package*.json ./

# Instala APENAS as dependências de produção para manter a imagem pequena
RUN npm install --only=production

# Copia o código compilado (da pasta 'dist') e o schema do Prisma do estágio 'builder'
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma
# O cliente Prisma gerado também é necessário para a execução
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma


# Expõe a porta que a nossa API usa
EXPOSE 3333

# Comando para iniciar a aplicação a partir do código JavaScript compilado
CMD [ "node", "dist/app.js" ]
