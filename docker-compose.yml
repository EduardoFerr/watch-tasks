services:
  backend:
    container_name: task_manager_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    volumes:
      - ./backend:/app
      - /app/node_modules
    # Carrega as variáveis de ambiente a partir de um ficheiro .env
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
      - rabbitmq
      - jaeger
    networks:
      - app-network

  frontend:
    container_name: task_manager_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  db:
    container_name: task_manager_db
    image: postgres:14-alpine
    # As variáveis do DB podem vir de um .env global ou ficar aqui para simplicidade
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=taskdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    container_name: task_manager_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    container_name: task_manager_rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  jaeger:
    container_name: task_manager_jaeger
    image: jaegertracing/all-in-one:1.28
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
